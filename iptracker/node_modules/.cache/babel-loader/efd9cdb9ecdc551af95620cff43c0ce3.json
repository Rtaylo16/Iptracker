{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Super\\\\Iptracker\\\\iptracker\\\\src\\\\components\\\\map.js\",\n    _s = $RefreshSig$();\n\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport { Icon } from 'leaflet';\nimport React, { useState, useEffect } from 'react';\nimport InputBase from '@mui/material/InputBase';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport Paper from '@mui/material/Paper';\nimport '../App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Map() {\n  _s();\n\n  const [location, setLocation] = useState(null);\n  const [searchInput, setSearchInput] = useState('');\n  const [map, setMap] = useState(null);\n  useEffect(() => {\n    if (searchInput) {\n      axios.get(`https://geo.ipify.org/api/v2/country,city?apiKey=${process.env.REACT_APP_API_KEY}&ipAddress=${searchInput}`).then(res => {\n        setLocation(res.data); // Zoom in to marker location when it is set\n\n        if (map && res.data.location) {\n          const {\n            lat,\n            lng\n          } = res.data.location;\n          map.flyTo([lat, lng], 13, {\n            duration: 1.5 // Adjust animation duration as desired\n\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }, [searchInput, map]);\n\n  const handleSearch = e => {\n    e.preventDefault();\n    setSearchInput(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mapDiv\",\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      className: \"input\",\n      component: \"form\",\n      sx: {\n        p: '2px 4px',\n        display: 'flex',\n        alignItems: 'center'\n      },\n      onSubmit: e => {\n        e.preventDefault();\n        handleSearch(e);\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputBase, {\n        sx: {\n          ml: 1,\n          flex: 1\n        },\n        placeholder: \"Enter IP Address\",\n        inputProps: {\n          'aria-label': 'search IP address'\n        },\n        value: searchInput,\n        onChange: e => setSearchInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        type: \"submit\",\n        sx: {\n          p: '10px'\n        },\n        \"aria-label\": \"search\",\n        children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      className: \"display-dashboard\",\n      children: location && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n          className: \"title2\",\n          children: [\"IP Address: \", location.ip]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"vertical\",\n          variant: \"middle\",\n          flexItem: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          className: \"title2\",\n          children: [\"Location: \", location.location.city, \", \", location.location.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"vertical\",\n          variant: \"middle\",\n          flexItem: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          className: \"title2\",\n          children: [\"Timezone: \", location.location.timezone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"vertical\",\n          variant: \"middle\",\n          flexItem: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          className: \"title2\",\n          children: [\"ISP: \", location.isp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: location ? [location.location.lat, location.location.lng] : [45.4, -75.7],\n      zoom: location ? 13 : 2,\n      scrollWheelZoom: false,\n      className: \"leaflet-container\",\n      whenCreated: setMap,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), location && /*#__PURE__*/_jsxDEV(Marker, {\n        position: [location.location.lat, location.location.lng],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"IP Address: \", location.ip]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Location: \", location.location.city, \", \", location.location.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Timezone: \", location.location.timezone]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"ISP: \", location.isp]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"3Vdymxx9Fz7qTJR3oYSMU3wcZR0=\");\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["C:/Users/Super/Iptracker/iptracker/src/components/map.js"],"names":["MapContainer","TileLayer","Marker","Popup","useMap","Icon","React","useState","useEffect","InputBase","Divider","IconButton","MenuIcon","SearchIcon","Paper","axios","Map","location","setLocation","searchInput","setSearchInput","map","setMap","get","process","env","REACT_APP_API_KEY","then","res","data","lat","lng","flyTo","duration","catch","error","console","log","handleSearch","e","preventDefault","target","value","p","display","alignItems","ml","flex","ip","city","country","timezone","isp"],"mappings":"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","sourcesContent":["import { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\r\nimport { Icon } from 'leaflet';\r\nimport React, { useState, useEffect } from 'react';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport Paper from '@mui/material/Paper';\r\nimport '../App.css';\r\nimport axios from 'axios';\r\n\r\nexport default function Map() {\r\n  const [location, setLocation] = useState(null);\r\n  const [searchInput, setSearchInput] = useState('');\r\n  const [map, setMap] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (searchInput) {\r\n      axios\r\n        .get(`https://geo.ipify.org/api/v2/country,city?apiKey=${process.env.REACT_APP_API_KEY}&ipAddress=${searchInput}`)\r\n        .then((res) => {\r\n          setLocation(res.data);\r\n          // Zoom in to marker location when it is set\r\n          if (map && res.data.location) {\r\n            const { lat, lng } = res.data.location;\r\n            map.flyTo([lat, lng], 13, {\r\n              duration: 1.5, // Adjust animation duration as desired\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, [searchInput, map]);\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    setSearchInput(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mapDiv\">\r\n      <Paper\r\n        className=\"input\"\r\n        component=\"form\"\r\n        sx={{ p: '2px 4px', display: 'flex', alignItems: 'center' }}\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          handleSearch(e);\r\n        }}\r\n      >\r\n        <InputBase\r\n          sx={{ ml: 1, flex: 1 }}\r\n          placeholder=\"Enter IP Address\"\r\n          inputProps={{ 'aria-label': 'search IP address' }}\r\n          value={searchInput}\r\n          onChange={(e) => setSearchInput(e.target.value)}\r\n        />\r\n        <IconButton type=\"submit\" sx={{ p: '10px' }} aria-label=\"search\">\r\n          <SearchIcon />\r\n        </IconButton>\r\n      </Paper>\r\n\r\n      <Paper elevation={3} className=\"display-dashboard\">\r\n        {location && (\r\n          <>\r\n            <text className=\"title2\">IP Address: {location.ip}</text>\r\n            <Divider orientation=\"vertical\" variant=\"middle\" flexItem />\r\n            <text className=\"title2\">\r\n              Location: {location.location.city}, {location.location.country}\r\n            </text>\r\n            <Divider orientation=\"vertical\" variant=\"middle\" flexItem />\r\n            <text className=\"title2\">Timezone: {location.location.timezone}</text>\r\n            <Divider orientation=\"vertical\" variant=\"middle\" flexItem />\r\n            <text className=\"title2\">ISP: {location.isp}</text>\r\n          </>\r\n        )}\r\n      </Paper>\r\n\r\n      <MapContainer\r\n        center={location ? [location.location.lat, location.location.lng] : [45.4, -75.7]}\r\n        zoom={location ? 13 : 2}\r\n        scrollWheelZoom={false}\r\n        className=\"leaflet-container\"\r\n        whenCreated={setMap}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n\r\n        {location && (\r\n          <Marker position={[location.location.lat, location.location.lng]}>\r\n            <Popup>\r\n              <div>\r\n                <p>IP Address: {location.ip}</p>\r\n                <p>\r\n                  Location: {location.location.city}, {location.location.country}\r\n                </p>\r\n                <p>Timezone: {location.location.timezone}</p>\r\n                <p>ISP: {location.isp}</p>\r\n              </div>\r\n            </Popup>\r\n          </Marker>\r\n        )}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}