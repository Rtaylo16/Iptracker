{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Super\\\\Iptracker\\\\iptracker\\\\src\\\\components\\\\map.js\",\n    _s = $RefreshSig$();\n\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { Icon } from \"leaflet\";\nimport React, { useState, useEffect } from 'react';\nimport InputBase from '@mui/material/InputBase';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport Paper from '@mui/material/Paper';\nimport '../App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Map() {\n  _s();\n\n  const [location, setLocation] = useState(null);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [map, setMap] = useState(null);\n  useEffect(() => {\n    if (searchInput) {\n      axios.get(`https://geo.ipify.org/api/v2/country,city?apiKey=at_qaQb5z18XlN0etMkmTmNwTJbQzBnz&ipAddress=${searchInput}`).then(res => {\n        setLocation(res.data); // Zoom in to marker location when it is set\n\n        if (map && res.data.location) {\n          const {\n            lat,\n            lng\n          } = res.data.location;\n          map.flyTo([lat, lng], 13, {\n            duration: 1.5 // Adjust animation duration as desired\n\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }, [searchInput, map]);\n  console.log(location, 'location');\n\n  const handleSearch = e => {\n    e.preventDefault();\n    setSearchInput(e.target.value);\n  };\n\n  const mapCenter = location ? [location.location.lat, location.location.lng] : [45.4, -75.7];\n  const mapZoom = location ? 13 : 2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mapDiv\",\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      className: \"input\",\n      component: \"form\",\n      sx: {\n        p: '2px 4px',\n        display: 'flex',\n        alignItems: 'center'\n      },\n      onSubmit: e => {\n        e.preventDefault();\n        handleSearch();\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputBase, {\n        sx: {\n          ml: 1,\n          flex: 1\n        },\n        placeholder: \"Enter IP Address\",\n        inputProps: {\n          'aria-label': 'search IP address'\n        },\n        value: searchInput,\n        onChange: e => setSearchInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        type: \"submit\",\n        sx: {\n          p: '10px'\n        },\n        \"aria-label\": \"search\",\n        children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      className: \"display-dashboard\",\n      children: location && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n          className: \"title2\",\n          children: [\"IP Address: \", location.ip]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"vertical\",\n          variant: \"middle\",\n          flexItem: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          className: \"title2\",\n          children: [\"Location: \", location.location.city, \", \", location.location.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"vertical\",\n          variant: \"middle\",\n          flexItem: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          className: \"title2\",\n          children: [\"Timezone: \", location.location.timezone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"vertical\",\n          variant: \"middle\",\n          flexItem: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          className: \"title2\",\n          children: [\"ISP: \", location.isp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: mapCenter,\n      zoom: mapZoom,\n      scrollWheelZoom: false,\n      className: \"leaflet-container\",\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this), location && /*#__PURE__*/_jsxDEV(Marker, {\n        position: [location.location.lat, location.location.lng],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"IP Address: \", location.ip]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Location: \", location.location.city, \", \", location.location.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Timezone: \", location.location.timezone]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"ISP: \", location.isp]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"4cCcDnlFrDpjCUMqkEFrJd5aMHU=\");\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["C:/Users/Super/Iptracker/iptracker/src/components/map.js"],"names":["MapContainer","TileLayer","Marker","Popup","Icon","React","useState","useEffect","InputBase","Divider","IconButton","MenuIcon","SearchIcon","Paper","axios","Map","location","setLocation","searchInput","setSearchInput","map","setMap","get","then","res","data","lat","lng","flyTo","duration","catch","error","console","log","handleSearch","e","preventDefault","target","value","mapCenter","mapZoom","p","display","alignItems","ml","flex","ip","city","country","timezone","isp"],"mappings":"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","sourcesContent":["\r\nimport { MapContainer, TileLayer, Marker, Popup,} from 'react-leaflet'\r\nimport { Icon } from \"leaflet\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport Paper from '@mui/material/Paper';\r\nimport '../App.css'\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport default function Map() {\r\nconst [location, setLocation] = useState(null);\r\nconst [searchInput, setSearchInput] = useState(\"\");\r\nconst [map, setMap] = useState(null);\r\n\r\n\r\nuseEffect(() => {\r\n  if (searchInput) {\r\n    axios\r\n      .get(`https://geo.ipify.org/api/v2/country,city?apiKey=at_qaQb5z18XlN0etMkmTmNwTJbQzBnz&ipAddress=${searchInput}`)\r\n      .then((res) => {\r\n        setLocation(res.data);\r\n        // Zoom in to marker location when it is set\r\n        if (map && res.data.location) {\r\n          const { lat, lng } = res.data.location;\r\n          map.flyTo([lat, lng], 13, {\r\n            duration: 1.5, // Adjust animation duration as desired\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n}, [searchInput, map]);\r\n\r\n\r\nconsole.log(location, 'location')\r\n\r\nconst handleSearch = (e) => {\r\n  e.preventDefault();\r\n  setSearchInput(e.target.value);\r\n};\r\n\r\nconst mapCenter = location ? [location.location.lat, location.location.lng] : [45.4, -75.7];\r\nconst mapZoom = location ? 13 : 2;\r\n\r\n  return (\r\n    <div className='mapDiv'>\r\n    <Paper\r\n      className='input'\r\n      component=\"form\"\r\n      sx={{ p: '2px 4px', display: 'flex', alignItems: 'center' }}\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        handleSearch();\r\n      }}\r\n    >\r\n      <InputBase\r\n        sx={{ ml: 1, flex: 1 }}\r\n        placeholder=\"Enter IP Address\"\r\n        inputProps={{ 'aria-label': 'search IP address' }}\r\n        value={searchInput}\r\n        onChange={(e) => setSearchInput(e.target.value)}\r\n      />\r\n      <IconButton type=\"submit\" sx={{ p: '10px' }} aria-label=\"search\">\r\n        <SearchIcon />\r\n      </IconButton>\r\n    </Paper>\r\n\r\n    <Paper elevation={3} className='display-dashboard'>\r\n      {location && (\r\n        <>\r\n          <text className='title2'>IP Address: {location.ip}</text>\r\n          <Divider orientation=\"vertical\" variant=\"middle\" flexItem />\r\n          <text className='title2'>Location: {location.location.city}, {location.location.country}</text>\r\n          <Divider orientation=\"vertical\" variant=\"middle\" flexItem />\r\n          <text className='title2'>Timezone: {location.location.timezone}</text>\r\n          <Divider orientation=\"vertical\" variant=\"middle\" flexItem />\r\n          <text className='title2'>ISP: {location.isp}</text>\r\n        </>\r\n      )}\r\n    </Paper>\r\n\r\n    <MapContainer\r\n        center={mapCenter}\r\n        zoom={mapZoom}\r\n      scrollWheelZoom={false}\r\n      className='leaflet-container'\r\n    >\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n\r\n      {location && (\r\n        <Marker position={[location.location.lat, location.location.lng]}>\r\n          <Popup>\r\n            <div>\r\n              <p>IP Address: {location.ip}</p>\r\n              <p>Location: {location.location.city}, {location.location.country}</p>\r\n              <p>Timezone: {location.location.timezone}</p>\r\n              <p>ISP: {location.isp}</p>\r\n            </div>\r\n          </Popup>\r\n        </Marker>\r\n      )}\r\n    </MapContainer>\r\n  </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}